#!/usr/bin/env ruby

require "optparse"

require "proxypoke"



options = {
    proxy_host: "localhost",
    proxy_port: 3128,
    read_timeout: 3,
    search_string: ""
}


options_parser = OptionParser.new do |parser|
  parser.banner = "Usage: proxypass [options]"

  parser.on("-u", "--url URL", "Test URL to query. Required.") do |v|
    options[:url] = v
  end

  parser.on("-o", "--proxy-host HOST", "Proxy hostname or IP address. Defaults to 'localhost'.") do |v|
    options[:proxy_host] = v
  end

  parser.on("-p", "--proxy-port PORT", Integer, "Port to connect to on the proxy host. Defaults to 3128.") do |v|
    options[:proxy_port] = v
  end

  parser.on("-t", "--timeout", Float, "Request timeout value. Defaults to 3 seconds") do |v|
    options[:read_timeout] = v
  end

  parser.on("-s", "--string STRING", "Search for a specific string in the response body") do |v|
    options[:search_string] = v
  end

  parser.on("-h", "--help", "Prints this help.") do
    puts parser
    exit
  end

end

options_parser.parse!

if not options.keys.include? :url
  puts options_parser.help
  exit(false)
end

result, message = ProxyPoke.poke(
                  options[:url],
                  options[:proxy_host],
                  options[:proxy_port],
                  options[:read_timeout],
                  options[:search_string]
                )

puts "#{result}: #{message}"
result == "Success" ? exit : exit(1)

